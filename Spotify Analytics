-- For this project, I used Kaggle to download Spotify data, and created a table to insert in into
-- I used this to perform analytics on the data with SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM spotifydata;

-- Of the 10 most popular artists, what's their average dancability?--
SELECT artist_name, ROUND(AVG(popularity),2) AS avg_popularity, ROUND(AVG(danceability),2) AS avg_danceability FROM spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC LIMIT 10;

--How popular are songs outside of 4/4 time signature?--
SELECT track_name, time_signature, popularity FROM spotifydata
WHERE time_signature <>4;

--What's the most popular song key?-- 
SELECT song_key, ROUND(AVG(popularity),2) AS avg_popularity FROM spotifydata
GROUP BY song_key
ORDER BY avg_popularity DESC LIMIT 1;

--Which artists released the longest and shortest songs?--
SELECT artist_name, track_name, duration_ms FROM spotifydata
WHERE duration_ms IN (
    SELECT MAX(duration_ms) FROM spotifydata
    UNION SELECT MIN(duration_ms) FROM spotifydata
    )
ORDER BY duration_ms DESC LIMIT 2;

--Which songs have featuring artists?--
SELECT track_name FROM spotifydata 
WHERE track_name LIKE '%feat%'
OR artist_name LIKE '%with%'

--Calculate the average popularity for the artists in the Spotify data table --
--Then, for every artist with an average popularity of 90 or above, show their name, --
--their average popularity, and label them as a “Top Star” --
WITH temp_table AS (
    SELECT artist_name, AVG(popularity) AS avg_popularity FROM spotifydata
    GROUP BY artist_name
    )
SELECT artist_name, avg_popularity, 'Top Star' AS tag FROM temp_table
    WHERE avg_popularity >=90;
